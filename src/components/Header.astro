---
const navItems = [
  { label: 'Galería', href: '#galeria' },
  { label: 'Tienda', href: '#tienda' },
  { label: 'Personalizados', href: '#personalizados' },
  { label: 'Contacto', href: '#contacto' },
];
---
<header class="site-header">
  <div class="header-inner">
    <a class="brand" href="/">
      <img class="brand-logo" src="/BreadNSugar_Logo.svg" alt="Bread'n'Sugar" />
    </a>
    <button
      class="menu-toggle"
      type="button"
      aria-label="Abrir menú"
      aria-expanded="false"
      aria-controls="header-menu"
    >
      <span class="sr-only">Abrir menú</span>
      <span class="menu-icon" aria-hidden="true">
        <span class="bar"></span>
        <span class="bar"></span>
        <span class="bar"></span>
      </span>
    </button>
    <div class="header-menu" id="header-menu">
      <nav class="primary-nav" aria-label="Navegación principal">
        <ul>
          {navItems.map(({ label, href }) => (
            <li>
              <a href={href}>{label}</a>
            </li>
          ))}
        </ul>
      </nav>
      <a class="cta" href="#personalizados">Pedir personalizado</a>
    </div>
  </div>
</header>

<script type="module">
  const toggle = document.querySelector('.menu-toggle');
  const menu = document.querySelector('.header-menu');

  const setMenuState = (isOpen) => {
    if (!toggle || !menu) return;
    toggle.setAttribute('aria-expanded', String(isOpen));
    toggle.classList.toggle('is-open', isOpen);
    menu.classList.toggle('is-open', isOpen);
    document.body.classList.toggle('menu-open', isOpen);
  };

  const closeOnEscape = (event) => {
    if (event.key === 'Escape') {
      setMenuState(false);
    }
  };

  if (toggle && menu) {
    toggle.addEventListener('click', () => {
      const nextState = toggle.getAttribute('aria-expanded') !== 'true';
      setMenuState(nextState);
    });

    menu.querySelectorAll('a').forEach((link) => {
      link.addEventListener('click', () => {
        if (window.matchMedia('(max-width: 768px)').matches) {
          setMenuState(false);
        }
      });
    });

    const handleOutsideClick = (event) => {
      if (!menu.contains(event.target) && !toggle.contains(event.target)) {
        setMenuState(false);
      }
    };

    document.addEventListener('click', handleOutsideClick);

    const mq = window.matchMedia('(min-width: 769px)');
    const handleMqChange = (event) => {
      if (event.matches) {
        setMenuState(false);
      }
    };

    if (typeof mq.addEventListener === 'function') {
      mq.addEventListener('change', handleMqChange);
    } else if (typeof mq.addListener === 'function') {
      mq.addListener(handleMqChange);
    }

    document.addEventListener('keyup', closeOnEscape);
  }
</script>

<style>
.site-header {
  position: sticky;
  top: 0;
  z-index: 100;
  backdrop-filter: blur(10px);
  background-color: rgba(255, 247, 241, 0.92);
  border-bottom: 1px solid var(--border-color);
}

.header-inner {
  margin: 0 auto;
  max-width: 80rem;
  padding: 1rem 1.5rem;
  display: flex;
  align-items: center;
  gap: 1.5rem;
  position: relative;
}

.brand {
  display: inline-flex;
  align-items: center;
  text-decoration: none;
}

.brand-logo {
  width: 110px;
  max-width: 100%;
  height: auto;
}

.header-menu {
  margin-left: auto;
  display: flex;
  align-items: center;
  gap: 1.5rem;
}

.primary-nav ul {
  display: flex;
  align-items: center;
  gap: 1rem;
  list-style: none;
  margin: 0;
  padding: 0;
}

.primary-nav a {
  font-weight: 500;
}

.cta {
  border: 1px solid var(--accent-color);
  border-radius: 999px;
  color: var(--accent-color);
  font-weight: 500;
  padding: 0.45rem 1.25rem;
  transition: background-color 150ms ease, color 150ms ease;
}

.cta:hover {
  background-color: var(--accent-color);
  color: var(--bg-color);
}

.menu-toggle {
  display: none;
  margin-left: auto;
  border: 1px solid var(--border-color);
  border-radius: 0.75rem;
  padding: 0.6rem;
  background-color: rgba(255, 247, 241, 0.75);
  cursor: pointer;
  transition: border-color 150ms ease, background-color 150ms ease;
}

.menu-toggle:hover {
  border-color: var(--accent-color);
}

.menu-icon {
  display: inline-flex;
  flex-direction: column;
  gap: 0.3rem;
}

.bar {
  width: 1.5rem;
  height: 2px;
  border-radius: 999px;
  background-color: var(--heading-color);
  transition: transform 200ms ease, opacity 200ms ease;
}

.menu-toggle.is-open .bar:nth-child(1) {
  transform: translateY(6px) rotate(45deg);
}

.menu-toggle.is-open .bar:nth-child(2) {
  opacity: 0;
}

.menu-toggle.is-open .bar:nth-child(3) {
  transform: translateY(-6px) rotate(-45deg);
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

@media (max-width: 768px) {
  .menu-toggle {
    display: inline-flex;
  }

  .header-menu {
    position: absolute;
    left: 0;
    right: 0;
    top: 100%;
    margin-left: 0;
    padding: 1.5rem 1.5rem 2rem;
    background-color: rgba(255, 247, 241, 0.95);
    border-bottom: 1px solid var(--border-color);
    display: none;
    flex-direction: column;
    align-items: stretch;
    gap: 1.25rem;
    box-shadow: 0 8px 24px rgba(47, 39, 38, 0.06);
  }

  .header-menu.is-open {
    display: flex;
  }

  .primary-nav ul {
    flex-direction: column;
    align-items: flex-start;
    gap: 1rem;
  }

  .cta {
    width: 100%;
    text-align: center;
  }

  body.menu-open {
    overflow: hidden;
  }
}
</style>
